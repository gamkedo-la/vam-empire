[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float width : hint_range(0.0, 30.0);
uniform vec4 outline_color : hint_color;
uniform vec4 color_one : hint_color;
uniform vec4 color_two : hint_color;
uniform sampler2D textureName;
uniform vec2 textureName_size;

void fragment()
{
	//float size = width * 1.0 / float(textureSize(TEXTURE, 0).x);
	float size = width * 1.0 / textureName_size.x;
	vec4 sprite_color = texture(TEXTURE, UV);
	float alpha = -4.0 * sprite_color.a;
	alpha += texture(TEXTURE, UV + vec2(size, 0.0)).a;
	alpha += texture(TEXTURE, UV + vec2(-size, 0.0)).a;
	alpha += texture(TEXTURE, UV + vec2(0.0, size)).a;
	alpha += texture(TEXTURE, UV + vec2(0.0, -size)).a;
	
	vec4 final_color = mix(sprite_color, outline_color, clamp(alpha, 0.0, 1.0));
	COLOR = vec4(final_color.rgb, clamp(abs(alpha) + sprite_color.a, 0.0, 1.0));
}

"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/width = 0.0
shader_param/outline_color = Color( 0.141176, 0.623529, 0.870588, 1 )
shader_param/color_one = Color( 0.141176, 0.623529, 0.870588, 1 )
shader_param/color_two = Color( 0.408943, 0.705518, 0.857422, 1 )
shader_param/textureName_size = Vector2( 0, 0 )
